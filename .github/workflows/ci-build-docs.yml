# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Build Docs

on:
  push:
    branches: [ main, dev/main ]
  pull_request:
    branches: [ main, dev/main ]

jobs:
  build_docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Cache pip
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip # This path is specific to Ubuntu
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('*_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install box_embeddings as a package
      run: pip install .
    - name: Install test and doc requirements
      run: |
        pip install -r test_requirements.txt
        pip install -r doc_requirements.txt
    - name: Build Docs
      shell: bash
      working-directory: docs_source
      run: |
        echo "Building Docs"
        make coverage
    - name: Get current branch
      shell: bash
      run: |
        echo "running on branch ${GITHUB_REF##*/}"
        echo "branch=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Commit new Docs
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Github Action"
        git add docs
        git commit -m "Update Documentation" -a || true
    - name: Upload html doc as Artifact
    - uses: actions/upload-artifact@v1
      with:
        name: DocumentationHTML
        path: docs/
    - name: Push new docs
      uses: ad-m/github-push-action@master
      with:
        branch: ${{env.branch}}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    # Sphinx coverage report
    - name: Read sphinx coverage report
      id: sphinx_coverage
      uses: juliangruber/read-file-action@v1
      with:
        path: docs/python.txt
    - name: Create comment on PR for sphinx coverage
      uses: peter-evans/create-or-update-comment@v1
      if : ${{github.event_name == 'pull_request'}}
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ steps.sphinx_coverage.outputs.content }}
